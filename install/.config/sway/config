set $mod Mod4
set $left h
set $down j
set $up k
set $right l

set $term termite --title=Term
set $lock 'swaylock -f -F -e -c 000000 -i ~/.cache/wallpaper.png'
set $menu rofi -show drun
set $screenshot grim $(xdg-user-dir PICTURES)/$(date +'Screenshot-%Y-%m-%d-%H%M%S.png')
set $screenshot-region grim -g $(slurp) $(xdg-user-dir PICTURES)/$(date +'Screenshot-%Y-%m-%d-%H%M%S.png')

output eDP-1 scale 2
output * bg ~/.cache/wallpaper.png fit

input * {
    tap enabled
    natural_scroll enabled
    dwt enabled
}

input "1:1:AT_Translated_Set_2_keyboard" {
    xkb_layout custom
    xkb_model basic
}

font pango:DejaVu Sans Mono 14

focus_follows_mouse no

workspace_layout tabbed

xwayland enable

exec swayidle -w \
    lock $lock \
    timeout 10 'if pgrep -x swaylock; then swaymsg "output * dpms off"; fi' \
    resume 'swaymsg "output * dpms on"' \
    timeout 120 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' \
    timeout 150 $lock \
    before-sleep $lock

### Key bindings
#
# Basics:
#
    # start a terminal
    bindsym $mod+Return exec $term

    # kill focused window
    bindsym $mod+Shift+q kill

    # start your launcher
    bindsym $mod+space exec $menu

    # lock the screen
    bindsym $mod+Shift+o exec $lock

    # screenshot
    bindsym $mod+Shift+p exec $screenshot
    bindsym $mod+p exec $screenshot-region

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod

    # restart i3
    bindsym $mod+Shift+z restart

    # reload the configuration file
    bindsym $mod+Shift+c reload

    # exit sway (logs you out of your wayland session)
    bindsym $mod+Shift+x exit
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # cycle focus
    bindsym $mod+Tab focus right
    bindsym $mod+Shift+Tab focus left

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right

    # ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # _move_ workspace to different outputs
    bindsym $mod+Shift+Ctrl+$left move workspace to output left
    bindsym $mod+Shift+Ctrl+$down move workspace to output down
    bindsym $mod+Shift+Ctrl+$up move workspace to output up
    bindsym $mod+Shift+Ctrl+$right move workspace to output right
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+d focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent
    bindsym $mod+z focus child
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10 px or 10 ppt
    bindsym $down resize grow height 10 px or 10 ppt
    bindsym $up resize shrink height 10 px or 10 ppt
    bindsym $right resize grow width 10 px or 10 ppt

    # ditto, with arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# statusbar
bar {
    status_command SCRIPT_DIR=$HOME/sandbox/i3blocks-contrib i3blocks -c $HOME/.config/sway/blocks-config
    font pango:DejaVu Sans Mono 14
    position bottom
    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #323230 #323232 #5c5c5c
    }
}

# keybindings
bindsym XF86MonBrightnessUp exec light -A 10 && pkill -RTMIN+11 i3blocks
bindsym XF86MonBrightnessDown exec export MIN=$(light -P) && light -N 1 && light -U 10 && light -N $MIN && pkill -RTMIN+11 i3blocks
bindsym XF86AudioRaiseVolume exec amixer -q -D pulse sset Master 5%+ && pkill -RTMIN+10 i3blocks
bindsym XF86AudioLowerVolume exec amixer -q -D pulse sset Master 5%- && pkill -RTMIN+10 i3blocks
bindsym XF86AudioMute exec amixer set Master toggle # mute sound

# startup
exec --no-startup-id mako
exec --no-startup-id start-pulseaudio-x11
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id /usr/lib/geoclue-2.0/demos/agent
